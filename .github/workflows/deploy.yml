name: Deploy to Windows Server

on:
  push:
    branches:
      - master

jobs:
  check-connection:
    runs-on: ubuntu-latest
    steps:
      - name: Check SSH Key exists
        run: test -n "${{ secrets.SSH_PRIVATE_KEY }}" && echo "Key exists" || echo "Key is empty"

      - name: Test connection
        id: ssh_test
        uses: appleboy/ssh-action@master
        with:
          host: 193.239.161.50
          username: Administrator
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: echo Test connection

      - name: Check connection result
        run: |
          echo "Test connection..."
          if [ "${{ steps.ssh_test.outcome }}" == "success" ]; then
            echo "Connection successful"
          else
            echo "Connection failed"
            exit 1
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: check-connection
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: 193.239.161.50
          username: Administrator
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: >
            del C:\deploy.log 2>nul ^
            && echo Stopping old service... >> C:\deploy.log ^
            && sc stop ASGService 2>nul || echo Service not found >> C:\deploy.log ^
            && sc delete ASGService 2>nul || echo Service not found >> C:\deploy.log ^
            && echo Deploying new version... >> C:\deploy.log ^
            && rmdir /s /q C:\ASGBuilds 2>nul ^
            && mkdir C:\ASGBuilds ^
            && git clone https://github.com/KeFFiA/ASG.git C:\ASGBuilds ^
            && echo Setting up Python environment... >> C:\deploy.log ^
            && cd C:\ASGBuilds ^
            && python -m ensurepip --default-pip ^
            && python -m venv venv ^
            && call C:\ASGBuilds\venv\Scripts\activate ^
            && C:\ASGBuilds\venv\Scripts\python.exe -m pip install --upgrade pip ^
            && C:\ASGBuilds\venv\Scripts\pip install -r requirements.txt ^
            && echo Creating service using NSSM... >> C:\deploy.log ^
            && nssm install ASGService "C:\ASGBuilds\venv\Scripts\python.exe" "C:\ASGBuilds\main.py" ^
            && echo Starting service using NSSM... >> C:\deploy.log ^
            && nssm start ASGService