name: Deploy to Server

on:
  push:
    branches:
      - master

env:
  SHELL: powershell

jobs:
  check-connection:
    runs-on: ubuntu-latest
    steps:
      - name: Check SSH Key exists
        run: test -n "${{ secrets.SSH_PRIVATE_KEY }}" && echo "Key exists" || echo "Key is empty"

      - name: Test connection
        id: ssh_test
        uses: appleboy/ssh-action@master
        with:
          host: 193.239.161.50
          username: Administrator
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: echo Connection tested

  checkout_repository:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

  deploy:
    needs: [checkout_repository, check-connection]
    runs-on: ubuntu-latest
    steps:
      - name: Check Server OS
        id: check_os
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Starting check Server OS"
            if [ -f /etc/os-release ]; then
              echo "OS=linux" >> $GITHUB_ENV
            elif [ -f C:\\Windows\\System32\\systeminfo.exe ]; then
              echo "OS=windows" >> $GITHUB_ENV
            else
              echo "OS=unknown" >> $GITHUB_ENV
            fi
            echo "Detected OS: ${{ env.OS }}"

      - name: Deploy to Windows Server
        if: env.OS == 'windows'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Deploying on Windows..."
            rmdir /s /q C:\ASGBuilds\ICAO 2>nul
            mkdir C:\ASGBuilds\ICAO
            git clone https://github.com/KeFFiA/ASG.git C:\ASGBuilds\ICAO
            python -m venv C:\ASGBuilds\ICAO\venv
            C:\ASGBuilds\ICAO\venv\Scripts\pip install -r C:\ASGBuilds\ICAO\requirements.txt
            setx DATABASE_URL "postgresql+asyncpg://${{ secrets.USERNAME }}:${{ secrets.PASSWORD }}@${{ secrets.DB_HOST }}/${{ secrets.DATABASE }}" /M
            setx DATABASE_URL_TEST "postgresql://${{ secrets.USERNAME }}:${{ secrets.PASSWORD }}@${{ secrets.DB_HOST }}/${{ secrets.DATABASE }}" /M
            schtasks /create /tn "ASG Python Service" /tr "C:\ASGBuilds\ICAO\venv\Scripts\pythonw.exe C:\ASGBuilds\ICAO\main.py" /sc onstart /ru SYSTEM /f
            echo "Deploy complete!"

      - name: Deploy to Linux Server
        if: env.OS == 'linux'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Updating packages..."
            sudo apt-get update
            echo "Installing Docker..."
            sudo apt-get install -y docker.io
            sudo systemctl enable docker
            sudo systemctl start docker
            echo "Building and running container..."
            docker build -t asg_image .
            docker run -d --name asg_container \
              -e DATABASE_URL="${{ secrets.USERNAME }}:${{ secrets.PASSWORD }}@${{ secrets.DB_HOST }}/${{ secrets.DATABASE }}" \
              -e DATABASE_URL_TEST="${{ secrets.USERNAME }}:${{ secrets.PASSWORD }}@${{ secrets.DB_HOST }}/${{ secrets.DATABASE }}" \
              asg_image